{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RICARDO\\\\Downloads\\\\proyecto-quive\\\\frontend\\\\quive-web\\\\src\\\\pages\\\\utils\\\\DriveImagenInline.jsx\";\nimport React from 'react';\n\n/**\r\n * DriveImageInline:\r\n *   - Recibe un fileId de Google Drive.\r\n *   - Simplemente pone <img src=\"https://drive.google.com/thumbnail?...\" /> para que el navegador\r\n *     lo trate como imagen inline.\r\n *   - NO fuerza descarga.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriveImageInline = ({\n  fileId,\n  altText = 'Imagen de Drive',\n  size = 512\n}) => {\n  if (!fileId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No hay imagen para mostrar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Aquí usamos directamente la URL de thumbnail. Con permisos públicos esto devuelve la imagen.\n  const thumbnailUrl = `https://drive.google.com/thumbnail?id=${fileId}&sz=s${size}`;\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: thumbnailUrl,\n    alt: altText,\n    className: \"max-w-full h-auto rounded-lg shadow-md\",\n    onError: e => {\n      // Si falla (por ejemplo, permiso), reemplazamos por mensaje de error\n      e.target.onerror = null;\n      e.target.style.display = 'none';\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = DriveImageInline;\nexport default DriveImageInline;\nvar _c;\n$RefreshReg$(_c, \"DriveImageInline\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DriveImageInline","fileId","altText","size","className","children","fileName","_jsxFileName","lineNumber","columnNumber","thumbnailUrl","src","alt","onError","e","target","onerror","style","display","_c","$RefreshReg$"],"sources":["C:/Users/RICARDO/Downloads/proyecto-quive/frontend/quive-web/src/pages/utils/DriveImagenInline.jsx"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * DriveImageInline:\r\n *   - Recibe un fileId de Google Drive.\r\n *   - Simplemente pone <img src=\"https://drive.google.com/thumbnail?...\" /> para que el navegador\r\n *     lo trate como imagen inline.\r\n *   - NO fuerza descarga.\r\n */\r\nconst DriveImageInline = ({ fileId, altText = 'Imagen de Drive', size = 512 }) => {\r\n  if (!fileId) {\r\n    return <p className=\"text-gray-500\">No hay imagen para mostrar.</p>;\r\n  }\r\n\r\n  // Aquí usamos directamente la URL de thumbnail. Con permisos públicos esto devuelve la imagen.\r\n  const thumbnailUrl = `https://drive.google.com/thumbnail?id=${fileId}&sz=s${size}`;\r\n\r\n  return (\r\n    <img\r\n      src={thumbnailUrl}\r\n      alt={altText}\r\n      className=\"max-w-full h-auto rounded-lg shadow-md\"\r\n      onError={(e) => {\r\n        // Si falla (por ejemplo, permiso), reemplazamos por mensaje de error\r\n        e.target.onerror = null;\r\n        e.target.style.display = 'none';\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DriveImageInline;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO,GAAG,iBAAiB;EAAEC,IAAI,GAAG;AAAI,CAAC,KAAK;EAChF,IAAI,CAACF,MAAM,EAAE;IACX,oBAAOF,OAAA;MAAGK,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrE;;EAEA;EACA,MAAMC,YAAY,GAAG,yCAAyCT,MAAM,QAAQE,IAAI,EAAE;EAElF,oBACEJ,OAAA;IACEY,GAAG,EAAED,YAAa;IAClBE,GAAG,EAAEV,OAAQ;IACbE,SAAS,EAAC,wCAAwC;IAClDS,OAAO,EAAGC,CAAC,IAAK;MACd;MACAA,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,IAAI;MACvBF,CAAC,CAACC,MAAM,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM;IACjC;EAAE;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACU,EAAA,GApBInB,gBAAgB;AAsBtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
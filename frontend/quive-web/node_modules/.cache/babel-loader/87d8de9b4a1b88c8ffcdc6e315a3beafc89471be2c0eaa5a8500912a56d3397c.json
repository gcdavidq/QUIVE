{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RICARDO\\\\Downloads\\\\proyecto-quive\\\\frontend\\\\quive-web\\\\src\\\\pages\\\\utils\\\\DriveImageViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriveImageViewer = ({\n  fileId\n}) => {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n  useEffect(() => {\n    if (fileId) {\n      const url = `https://drive.google.com/uc?export=view&id=${fileId}`;\n      setImageSrc(url);\n    }\n  }, [fileId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoaded && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando imagen...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: \"Imagen de Drive\",\n      onLoad: () => setIsLoaded(true),\n      style: {\n        display: isLoaded ? 'block' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n// → Agrega esta línea para exportar el componente por defecto:\n_s(DriveImageViewer, \"FuA1pL3EWDgwI06YVw8QXG2c1Rw=\");\n_c = DriveImageViewer;\nexport default DriveImageViewer;\nvar _c;\n$RefreshReg$(_c, \"DriveImageViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DriveImageViewer","fileId","_s","isLoaded","setIsLoaded","imageSrc","setImageSrc","url","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onLoad","style","display","_c","$RefreshReg$"],"sources":["C:/Users/RICARDO/Downloads/proyecto-quive/frontend/quive-web/src/pages/utils/DriveImageViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DriveImageViewer = ({ fileId }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fileId) {\r\n      const url = `https://drive.google.com/uc?export=view&id=${fileId}`;\r\n      setImageSrc(url);\r\n    }\r\n  }, [fileId]);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoaded && <p>Cargando imagen...</p>}\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt=\"Imagen de Drive\"\r\n          onLoad={() => setIsLoaded(true)}\r\n          style={{ display: isLoaded ? 'block' : 'none' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// → Agrega esta línea para exportar el componente por defecto:\r\nexport default DriveImageViewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAII,MAAM,EAAE;MACV,MAAMM,GAAG,GAAG,8CAA8CN,MAAM,EAAE;MAClEK,WAAW,CAACC,GAAG,CAAC;IAClB;EACF,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAS,QAAA,GACG,CAACL,QAAQ,iBAAIJ,OAAA;MAAAS,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACtCP,QAAQ,iBACPN,OAAA;MACEc,GAAG,EAAER,QAAS;MACdS,GAAG,EAAC,iBAAiB;MACrBC,MAAM,EAAEA,CAAA,KAAMX,WAAW,CAAC,IAAI,CAAE;MAChCY,KAAK,EAAE;QAAEC,OAAO,EAAEd,QAAQ,GAAG,OAAO,GAAG;MAAO;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAV,EAAA,CA1BMF,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}